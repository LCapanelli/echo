{"version":3,"sources":["app/app.js","app/app.ts","app/buildScripts/srcServer.js","app/buildScripts/srcServer.ts","app/buildScripts/startMessage.js","app/buildScripts/startMessage.ts","app/buildScripts/testSetup.js","app/initialize.js","app/initialize.ts"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\nvar handlebars = require(\"handlebars\");\r\nvar indexRouter = require('../routes');\r\nvar usersRouter = require('../routes/users');\r\nrequire(\"chalk\");\r\n//const dbConnect = require('./config/dbConnect');\r\nvar app = express();\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'hbs');\r\n//Sets handlebars configurations (we will go through them later on)\r\napp.engine('hbs', handlebars({\r\n    layoutsDir: __dirname + '/views/layouts',\r\n    extname: 'hbs'\r\n}));\r\napp.get('/', function (req, res) {\r\n    //Serves the body of the page aka \"main.handlebars\" to the container //aka \"index.handlebars\"\r\n    res.render('main', { layout: 'index' });\r\n});\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\n// catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n    next(createError(404));\r\n});\r\n// error handler\r\napp.use(function (err, req, res, next) {\r\n    // set locals, only providing error in development\r\n    res.locals.message = err.message;\r\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n    // render the error page\r\n    res.status(err.status || 500);\r\n    res.render('error');\r\n});\r\nmodule.exports = app;\r\n","var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nconst handlebars = require(\"handlebars\");\nvar indexRouter = require('../routes');\nvar usersRouter = require('../routes/users');\nvar chalk = require('chalk');\n//const dbConnect = require('./config/dbConnect');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\n//Sets handlebars configurations (we will go through them later on)\napp.engine('hbs', handlebars({\n  layoutsDir: __dirname + '/views/layouts',\n  extname: 'hbs'\n}));\n\napp.get('/', (req, res) => {\n//Serves the body of the page aka \"main.handlebars\" to the container //aka \"index.handlebars\"\n  res.render('main', {layout : 'index'});\n});\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n","var port = 3000;\r\napp.get('/', function (req, res) {\r\n    res.sendFile(path.resolve(__dirname, 'dist', 'index.html'));\r\n});\r\napp.listen(port, function (err) {\r\n    if (err) {\r\n        /* eslint-disable-next-line */\r\n        console.log(err);\r\n    }\r\n    else {\r\n        open('http://localhost:' + port);\r\n    }\r\n});\r\n// const connectDB = async () => {\r\n//     try {\r\n//         await mongoose.connect(db);\r\n//         console.log(chalk.blue(\"MongoDB is Connected...\"));\r\n//     } catch (err) {\r\n//         console.error(err.message);\r\n//         process.exit(1);\r\n//     }\r\n// };\r\n","const port = 3000;\r\n\r\napp.get('/', function (req, res) {\r\n    res.sendFile(path.resolve(__dirname, 'dist', 'index.html'));\r\n});\r\n\r\napp.listen(port, function (err) {\r\n    if (err){\r\n        /* eslint-disable-next-line */\r\n        console.log(err);\r\n    } else {\r\n        open('http://localhost:' + port);\r\n    }\r\n});\r\n\r\n// const connectDB = async () => {\r\n//     try {\r\n//         await mongoose.connect(db);\r\n//         console.log(chalk.blue(\"MongoDB is Connected...\"));\r\n//     } catch (err) {\r\n//         console.error(err.message);\r\n//         process.exit(1);\r\n//     }\r\n// };\r\n","//let chalk = require('chalk');\r\n// const chalk = require('chalk');\r\n/* eslint-disable-next-line */\r\nconsole.log(chalk.green(\"Starting app in DEV mode...\"));\r\n","//let chalk = require('chalk');\r\n// const chalk = require('chalk');\r\n\r\n/* eslint-disable-next-line */\r\nconsole.log(chalk.green(\"Starting app in DEV mode...\"));","require('babel-register')();\r\n\r\nrequire.extensions['.css'] = function () {};","var numeral = require('numeral');\r\nvar value = numeral(999).format('$0,0.00');\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // do your setup here\r\n    console.log('Initialized app');\r\n    console.log(\"I would pay \" + value + \" for this course!\"); // eslint-disable-line no-console\r\n});\r\n","const numeral = require('numeral');\r\nconst value = numeral(999).format('$0,0.00');\r\n// import chalk from \"chalk\";\r\n// const chalk = require('chalk');\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // do your setup here\r\n  console.log('Initialized app');\r\n  console.log(`I would pay ${value} for this course!`); // eslint-disable-line no-console\r\n\r\n});\r\n"]}